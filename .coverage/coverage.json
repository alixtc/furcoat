{"meta": {"format": 2, "version": "7.4.4", "timestamp": "2024-05-01T19:11:43.689854", "branch_coverage": false, "show_contexts": false}, "files": {"pelage/__init__.py": {"executed_lines": [3], "summary": {"covered_lines": 1, "num_statements": 1, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "pelage/checks.py": {"executed_lines": [1, 6, 8, 9, 10, 12, 14, 18, 22, 24, 27, 28, 31, 32, 55, 58, 59, 61, 62, 64, 65, 67, 70, 149, 150, 153, 154, 158, 160, 164, 165, 166, 167, 169, 171, 172, 175, 178, 228, 230, 231, 232, 233, 234, 237, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 308, 360, 361, 366, 367, 370, 373, 377, 378, 379, 380, 382, 385, 439, 440, 441, 442, 443, 446, 498, 499, 500, 501, 505, 508, 512, 513, 518, 570, 571, 574, 575, 579, 582, 634, 636, 637, 643, 650, 651, 656, 659, 710, 713, 715, 716, 721, 726, 729, 781, 784, 785, 786, 791, 795, 798, 872, 873, 879, 880, 884, 886, 887, 888, 889, 890, 891, 892, 893, 895, 896, 899, 902, 903, 904, 908, 919, 1019, 1021, 1022, 1028, 1030, 1041, 1050, 1051, 1055, 1058, 1061, 1062, 1066, 1069, 1146, 1148, 1149, 1151, 1162, 1163, 1167, 1169, 1171, 1173, 1174, 1177, 1180, 1257, 1260, 1263, 1264, 1265, 1268, 1271, 1317, 1318, 1320, 1321, 1322, 1323, 1324, 1326, 1327, 1328, 1330, 1333, 1443, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1467, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1477, 1480, 1482, 1483, 1487, 1490, 1546, 1547, 1548, 1549, 1553, 1556, 1634, 1635, 1637, 1638, 1639, 1641, 1643, 1652, 1653, 1658, 1662, 1665, 1666, 1667, 1672, 1740, 1742, 1746, 1754, 1755, 1756, 1760, 1769], "summary": {"covered_lines": 232, "num_statements": 236, "percent_covered": 98.30508474576271, "percent_covered_display": "98", "missing_lines": 4, "excluded_lines": 0}, "missing_lines": [161, 515, 906, 1669], "excluded_lines": []}, "pelage/utils.py": {"executed_lines": [1, 3, 6, 7, 8, 11, 13, 18, 23], "summary": {"covered_lines": 9, "num_statements": 9, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/__init__.py": {"executed_lines": [1], "summary": {"covered_lines": 0, "num_statements": 0, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_checks.py": {"executed_lines": [1, 3, 4, 5, 7, 8, 11, 12, 13, 15, 29, 30, 33, 34, 36, 42, 43, 46, 47, 53, 54, 57, 66, 67, 68, 71, 72, 73, 76, 77, 78, 79, 82, 83, 84, 90, 91, 94, 95, 96, 102, 103, 106, 107, 114, 115, 118, 119, 125, 126, 129, 130, 131, 132, 135, 136, 137, 138, 141, 142, 143, 144, 146, 147, 148, 151, 152, 153, 154, 157, 158, 159, 160, 162, 165, 166, 167, 168, 171, 172, 173, 174, 176, 177, 178, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 195, 196, 199, 200, 201, 205, 206, 207, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 224, 225, 226, 227, 230, 231, 232, 233, 235, 236, 237, 240, 241, 242, 243, 244, 247, 248, 249, 250, 253, 254, 255, 256, 259, 260, 261, 262, 264, 265, 266, 269, 270, 276, 277, 280, 281, 287, 288, 290, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 307, 308, 309, 310, 312, 313, 315, 316, 319, 320, 321, 322, 325, 326, 327, 328, 331, 332, 333, 335, 336, 337, 342, 343, 344, 345, 347, 348, 351, 352, 358, 359, 362, 363, 369, 370, 373, 374, 380, 381, 384, 385, 386, 387, 389, 390, 393, 394, 395, 397, 404, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 432, 433, 434, 435, 437, 438, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 466, 469, 470, 471, 472, 475, 476, 477, 478, 481, 482, 483, 484, 487, 488, 489, 490, 493, 494, 495, 496, 498, 499, 502, 511, 512, 513, 514, 516, 518, 519, 522, 523, 524, 533, 534, 537, 538, 539, 540, 542, 543, 544, 547, 548, 549, 550, 553, 554, 555, 556, 558, 559, 560, 563, 564, 565, 566, 568, 569, 570, 573, 574, 585, 586, 589, 590, 601, 602, 604, 605, 608, 609, 610, 611, 612, 613, 616, 617, 618, 619, 622, 623, 624, 625, 628, 629, 630, 631, 634, 635, 642, 643, 645, 648, 649, 650, 651, 654, 655, 656, 657, 660, 661, 662, 663, 665, 666, 669, 670, 671, 672, 675, 676, 677, 678, 681, 682, 690, 691, 694, 695, 703, 704, 707, 708, 720, 721, 723, 724, 727, 728, 735, 741, 744, 745, 747, 749, 752, 753, 755, 756, 759, 760, 768, 769, 771, 772, 775, 776, 777, 778, 781, 782, 783, 784, 787, 788, 790, 791, 793, 794, 797, 798, 799, 800, 803, 804, 810, 811], "summary": {"covered_lines": 429, "num_statements": 429, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_utils.py": {"executed_lines": [1, 3, 5, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 37, 38, 39, 40, 41, 44, 45, 46, 47, 52], "summary": {"covered_lines": 34, "num_statements": 34, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}}, "totals": {"covered_lines": 705, "num_statements": 709, "percent_covered": 99.4358251057828, "percent_covered_display": "99", "missing_lines": 4, "excluded_lines": 0}}